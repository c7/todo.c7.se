// Code generated by templ@v0.2.334 DO NOT EDIT.

package partials

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/c7/todo.c7.se/todo"

func Item(item *todo.Item) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"draggable\"><nav><ul style=\"width: 100%;\"><li><form method=\"GET\" action=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString("/items/" + item.ID.String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><button type=\"submit\" hx-target=\"closest div\" hx-swap=\"outerHTML\" hx-get=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString("/items/" + item.ID.String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" class=\"outline primary\">")
		if err != nil {
			return err
		}
		var_2 := `üìù`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></form></li><li><form method=\"POST\" action=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString("/items/" + item.ID.String() + "/delete"))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><button type=\"submit\" hx-target=\"closest div\" hx-swap=\"outerHTML\" hx-delete=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString("/items/" + item.ID.String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" class=\"outline secondary\">")
		if err != nil {
			return err
		}
		var_3 := `‚ùå`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></form></li><li style=\"width: 100%;\">")
		if err != nil {
			return err
		}
		var var_4 = []any{"inline", templ.KV("line-through", item.Completed)}
		err = templ.RenderCSSItems(ctx, templBuffer, var_4...)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<form method=\"POST\" action=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString("/items/" + item.ID.String() + "/edit"))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" hx-target=\"closest div\" hx-swap=\"outerHTML\" class=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_4).String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><input type=\"hidden\" name=\"completed\"")
		if err != nil {
			return err
		}
		if !item.Completed {
			_, err = templBuffer.WriteString(" value=\"true\"")
			if err != nil {
				return err
			}
		} else {
			_, err = templBuffer.WriteString(" value=\"false\"")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("><input type=\"hidden\" name=\"description\" value=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(item.Description))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><noscript><input type=\"submit\"")
		if err != nil {
			return err
		}
		if item.Completed {
			_, err = templBuffer.WriteString(" value=\"Set as Not Completed\"")
			if err != nil {
				return err
			}
		} else {
			_, err = templBuffer.WriteString(" value=\"Set as Completed\"")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("></noscript><strong><span hx-patch=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString("/items/" + item.ID.String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var var_5 string = item.Description
		_, err = templBuffer.WriteString(templ.EscapeString(var_5))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></strong></form><input type=\"hidden\" name=\"id\" value=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(item.ID.String()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"></li></ul></nav></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
